.container-fluid
  .row.mb-1
    .col-md-2
      %h3.mb-2.text-center Sales Board
      %hr
      .card.text-center
        .card-header
          Results
        .card-body.small
          - grouped = @deals.included_in_counts.group_by(&:is_used)
          .row.no-gutters
            .col-lg-6
              .bg-blue.text-white.rounded
                .py-2
                  = "New: #{grouped[false]&.length || 0}"
            .col-lg-6
              .bg-green.rounded
                .py-2
                  = "Used: #{grouped[true]&.length || 0}"
      
        .card-body.text-left.small.pt-0
          %small
            - deal_rep_attribution_counts(@deals.included_in_counts).sort_by{ |k, v| v[:new] + v[:used] }.reverse_each do |rep, deals|
              = "<b>#{rep.presence || 'Unknown Rep'}</b> (#{number_with_precision(deals[:new] + deals[:used], significant: true, precision: 2, strip_insignificant_zeros: true)})".html_safe
              %br
              = "#{number_with_precision(deals[:new], significant: true, precision: 2, strip_insignificant_zeros: true)} New"
              &#183;
              = "#{number_with_precision(deals[:used], significant: true, precision: 2, strip_insignificant_zeros: true)} Used"
              %hr.my-1


    .col-md-10
      = link_to 'New Entry', new_deal_path, class: 'btn btn-primary btn-sm'

      .dropdown.show.pull-right
        %a#dropdownMenuLink.btn.btn-secondary.dropdown-toggle.btn-sm{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
          All Reports
        .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "dropdownMenuLink"}
          = link_to 'MTD New Vehicle Report', new_vehicle_report_board_manager_path, class: 'dropdown-item'
          = link_to 'MTD New Vehicle RDR Report', rdr_report_board_manager_path, class: 'dropdown-item'
          = link_to 'MTD Used Vehicle Report', used_vehicle_report_board_manager_path, class: 'dropdown-item'
          = link_to 'Running Total', running_total_board_manager_path, class: 'dropdown-item'
          = link_to 'MTD CPO Report', cpo_report_board_manager_path, class: 'dropdown-item'

          = link_to 'Stored Deals', stored_deals_board_manager_path, class: 'dropdown-item'
           
      = form_for :filters, url: board_manager_path, method: :get, autocomplete: "off" do
        .row.pt-1
          .col-md-3.pt-1
            .btn-group{"data-toggle" => "buttons"}
              %label.btn.btn-sm{onchange: "$('#filters_start_date').val(''); $('#filters_end_date').val(''); $(this).parents('form').submit();", class: (params.dig(:filters, :mtd) == '0' || params.dig(:filters, :mtd).nil?) ? 'btn-success': 'btn-secondary'} 
                %small
                  Today
                = radio_button_tag 'filters[mtd]', "0", params.dig(:filters, :mtd) == '0' || params.dig(:filters, :mtd).nil?, class: 'd-none'

              %label.btn.btn-sm{onchange: "$('#filters_start_date').val(''); $('#filters_end_date').val(''); $(this).parents('form').submit();", class: (params.dig(:filters, :mtd) == '1') ? 'btn-success' : 'btn-secondary'}
                %small
                  MTD (since #{current_user.dealership.custom_mtd_start_date&.strftime("%m-%d-%y")})
                = radio_button_tag 'filters[mtd]', "1", params.dig(:filters, :mtd) == '1', class: 'd-none'


          .col-md-9.form-inline{style: 'margin-top: -5px;'}
            .input-group
              .input-group-prepend
                %span.input-group-text{style:'padding: 0 5px;'}
                  %i.fa.fa-calendar
              = text_field_tag "filters[start_date]", params.dig(:filters, :start_date), autocomplete: "off", placeholder: 'Start Date', class: 'form-control form-control-sm mr-1 datepicker', style: 'width: 100px;'
            .input-group
              .input-group-prepend
                %span.input-group-text{style:'padding: 0 5px;'}
                  %i.fa.fa-calendar
              = text_field_tag "filters[end_date]", params.dig(:filters, :end_date), autocomplete: "off", placeholder: 'End Date', class: 'form-control form-control-sm mr-1 datepicker', style: 'width: 100px;'
            .input-group
              .input-group-prepend
                %span.input-group-text{style:'padding: 0 5px;'}
                  %i.fa.fa-list
              = text_field_tag "filters[query]", params.dig(:filters, :query), placeholder: 'Last name OR Stock #', class: 'form-control form-control-sm'

            = submit_tag 'Search', class: 'ml-2 btn btn-sm btn-outline-secondary'

      .table-responsive.small{style:' max-height:70vh;overflow-y: scroll;'}
        %table.table.table-striped.table-sm.mb-0.board-manager-table
          %thead
            %tr
              %th
                %i.fa.fa-pencil
              %th Last
              %th Stock #
              %th
                = link_to board_manager_path(sortings: {source: params.dig(:sortings, :source) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Source
                  - if params.dig(:sortings, :source) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {is_used: params.dig(:sortings, :is_used) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  New
                  - if params.dig(:sortings, :is_used) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th Used
              %th Trade
              %th
                = link_to board_manager_path(sortings: {sales_rep: params.dig(:sortings, :sales_rep) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Sales Rep
                  - if params.dig(:sortings, :sales_rep) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {split_rep: params.dig(:sortings, :split_rep) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Split
                  - if params.dig(:sortings, :split_rep) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {city: params.dig(:sortings, :city) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  City
                  - if params.dig(:sortings, :city) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {result: params.dig(:sortings, :result) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Result
                  - if params.dig(:sortings, :result) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {report_status: params.dig(:sortings, :report_status) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Report
                  - if params.dig(:sortings, :report_status) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              
          %tbody
            - @grouped_deals.reverse_each do |date, deals|
              %tr
                %td.bg-light{colspan: 12}
                  %strong
                    = date.strftime("%m/%d/%Y")
                    = " (#{deals.count})"
              - deals.each do |deal|
                = render partial: 'deals/shared/deal_row', locals: {deal: deal}

:javascript
  $(function() {
    $('.datepicker').datepicker({
      dateFormat: 'yy-mm-dd'
     });
  });
