.container-fluid
  .row.mb-1
    .col-md-2
      %h3 Sales Board
    .col-md-10
      = link_to 'New Entry', new_deal_path, class: 'btn btn-primary btn-sm'
      = form_for :filters, url: board_manager_path, method: :get do
        .row.pt-1
          .col-md-3.pt-1 
            %label{onchange: "$(this).parents('form').submit();"}
              = check_box_tag "filters[mtd]", 1, params.dig(:filters, :mtd)&.present? ? true : false
              MTD
              %small.text-muted
                (since #{current_user.dealership.custom_mtd_start_date})
          .col-md-3.form-inline{style: 'margin-top: -5px;'}
            = text_field_tag "filters[query]", params.dig(:filters, :query), placeholder: 'Last name OR Stock #', class: 'form-control form-control-sm pull-left'
            = submit_tag 'Search', class: 'ml-2 btn btn-sm btn-outline-secondary'

          .col-md-2
            = link_to 'stored deals', stored_deals_board_manager_path(), class: 'btn btn-sm btn-outline-secondary'
            
  .row
    .col-md-2
    .col-md-10
      .table-responsive.small
        %table.table.table-striped.table-sm.mb-0.board-manager-table
          %thead
            %tr
              %th
                %i.fa.fa-pencil
              %th Last
              %th Stock #
              %th
                = link_to board_manager_path(sortings: {source: params.dig(:sortings, :source) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Source
                  - if params.dig(:sortings, :source) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {is_used: params.dig(:sortings, :is_used) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  New
                  - if params.dig(:sortings, :is_used) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th Used
              %th Trade
              %th
                = link_to board_manager_path(sortings: {sales_rep: params.dig(:sortings, :sales_rep) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Sales Rep
                  - if params.dig(:sortings, :sales_rep) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {split_rep: params.dig(:sortings, :split_rep) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Split
                  - if params.dig(:sortings, :split_rep) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {city: params.dig(:sortings, :city) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  City
                  - if params.dig(:sortings, :city) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {result: params.dig(:sortings, :result) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Result
                  - if params.dig(:sortings, :result) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              %th
                = link_to board_manager_path(sortings: {report_status: params.dig(:sortings, :report_status) == 'asc' ? "desc": "asc"}, filters: params[:filters].as_json ) do
                  Report
                  - if params.dig(:sortings, :report_status) == "asc"
                    %i.fa.fa-sort-up
                  - else
                    %i.fa.fa-sort-down
              
          %tbody
            - @grouped_deals.reverse_each do |date, deals|
              %tr
                %td.bg-light{colspan: 12}
                  %strong
                    = date.strftime("%m/%d/%Y")
                    = " (#{deals.count})"
              - deals.each do |deal|
                %tr{class: (deal.is_used ? 'text-green' : 'text-blue').to_s}
                  %td
                    = link_to edit_deal_path(deal) do
                      %i.fa.fa-pencil.edit-icon
                  %td= deal.client_last_name
                  
                  %td= deal.stock_number
                  
                  %td= deal.source
                  
                  - if deal.is_used
                    %td
                    %td
                      = deal.make
                      = deal.model
                      = deal.year
                  - else
                    %td
                      = deal.make
                      = deal.model
                      = deal.year
                    %td

                  %td= deal.trade
                  %td= deal.sales_rep
                  %td= deal.split_rep
                  %td= deal.city
                  %td= deal.result
                  %td{class: (deal.report_status == "Not RDR'd" ? 'text-danger' : '').to_s}
                    = deal.report_status


  .row.mt-4
    .col-md-2
    .col-md-5
      .row
        .col-6
          .card.text-center
            .card-header
              Sales Today
            .card-body.text-white
              - grouped = @deals.where("created_at >= ?", Date.today.beginning_of_day).group_by(&:is_used)
              %span.p-3.my-2.bg-blue
                = "New: #{grouped[false]&.length || 0}"
              %span.p-3.my-2.bg-green
                = "Used: #{grouped[true]&.length || 0}"
        .col-6
          .card.text-center
            .card-header
              Sales MTD
            .card-body.text-white
              - grouped = @deals.where("created_at >= ?", current_user.dealership.custom_mtd_start_date).group_by(&:is_used)
              %span.p-3.my-2.bg-blue
                = "New: #{grouped[false]&.length || 0}"
              %span.p-3.my-2.bg-green
                = "Used: #{grouped[true]&.length || 0}"
          