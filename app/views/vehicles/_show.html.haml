=# @vehicle.inspect
.card
  .table-responsive
    %table.table.table-bordered.table-striped.table-sm.mb-0
      %thead
        %tr
          %th{colspan: 4}= "#{@vehicle.make} #{@vehicle.model} History"
          
      %tbody
        - @vehicle.tags.includes(events: [:user, :resolutions]).each do |tag|
          - tag.events.each do |event|
            %tr
              %td= event.event_type.upcase
              %td
                = "Created By #{event.user.full_name} #{event.created_at.strftime('%m/%d/%Y')}"
                %br
                = event.event_details
              %td
                - if event.event_type == "note" && !event.acknowledged?
                  = link_to "clear note", new_event_resolution_path(event), remote: true
              %td
                - event.resolutions.each do |resolution|
                  %div.py-1
                    %strong= "#{resolution.user.full_name}'s action on #{resolution.created_at.strftime('%m/%d/%Y')}"
                    %br
                    = resolution.details
  .row.p-2
    .col
      - if @vehicle.parking_space&.geo_info
        / Button trigger modal
        %a#showVehicleTrigger{"data-target" => "#mapModal", "data-toggle" => "modal", :type => "link", href: ''}
          %i.fa.fa-map-marker
          Show Map

    .col
      %a#showVehicleDataFeed{"data-target" => "#vehicleDataFeed", "data-toggle" => "modal", :type => "link", href: ''}
        %i.fa.fa-laptop
        View Data Feed
    .col



/ Data Feed Modal
#vehicleDataFeed.modal{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog.modal-lg{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
      .modal-body
        .bg-light
          = @vehicle.raw_data_feed_output
      .modal-footer
        %button.btn.btn-secondary{"data-dismiss" => "modal", :type => "button"} Close

- if @vehicle.parking_space&.geo_info
  :javascript
    $(function(){
      layer = window.map.getLayer('singleVehicle');
      if (layer){
        window.map.removeLayer('singleVehicle');
        window.map.removeSource('singleVehicle');
      }
      
      window.map.addLayer({
        'id': 'singleVehicle',
        'type': 'fill',
        'source': {
            'type': 'geojson',
            "data": {
                      "type": "Feature",
                      "geometry": #{raw(@vehicle.parking_space&.geo_info['geometry'].to_json)}
                    }
        },
        'layout': {},
        'paint': {
          'fill-color': "#{@vehicle.is_used? ? '#66CC00' : '#006699'}",
        }
      });

      map.flyTo({center: #{raw(@vehicle.parking_space&.geo_info['geometry']['coordinates'][0][0].to_json)}});

    })